{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		// Hush CMake
		"cmake.configureOnOpen": true,
		"cmake.configureSettings": {
			"CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
		},
		"cmake.configureOnEdit": false,

		// IntelliSense
		//"C_Cpp.default.compilerPath": "/opt/toolchains/zephyr-sdk-0.16.5/arm-zephyr-eabi/bin/arm-zephyr-eabi-gcc",
		"C_Cpp.default.compilerPath": "/opt/toolchains/zephyr-sdk-0.16.5/x86_64-zephyr-elf",
		"C_Cpp.default.compileCommands": "${workspaceFolder}/build/compile_commands.json",

		// File Associations
		"files.associations": {
			"algorithm": "cpp",
			"array": "cpp",
			"atomic": "cpp",
			"bit": "cpp",
			"bitset": "cpp",
			"cctype": "cpp",
			"charconv": "cpp",
			"chrono": "cpp",
			"clocale": "cpp",
			"cmath": "cpp",
			"compare": "cpp",
			"concepts": "cpp",
			"condition_variable": "cpp",
			"csetjmp": "cpp",
			"cstdarg": "cpp",
			"cstddef": "cpp",
			"cstdint": "cpp",
			"cstdio": "cpp",
			"cstdlib": "cpp",
			"cstring": "cpp",
			"ctime": "cpp",
			"cwchar": "cpp",
			"cwctype": "cpp",
			"deque": "cpp",
			"exception": "cpp",
			"format": "cpp",
			"forward_list": "cpp",
			"fstream": "cpp",
			"functional": "cpp",
			"initializer_list": "cpp",
			"iomanip": "cpp",
			"ios": "cpp",
			"iosfwd": "cpp",
			"iostream": "cpp",
			"istream": "cpp",
			"iterator": "cpp",
			"limits": "cpp",
			"list": "cpp",
			"locale": "cpp",
			"map": "cpp",
			"memory": "cpp",
			"mutex": "cpp",
			"new": "cpp",
			"numbers": "cpp",
			"numeric": "cpp",
			"optional": "cpp",
			"ostream": "cpp",
			"queue": "cpp",
			"random": "cpp",
			"ranges": "cpp",
			"ratio": "cpp",
			"semaphore": "cpp",
			"set": "cpp",
			"span": "cpp",
			"sstream": "cpp",
			"stack": "cpp",
			"stdexcept": "cpp",
			"stop_token": "cpp",
			"streambuf": "cpp",
			"string": "cpp",
			"system_error": "cpp",
			"thread": "cpp",
			"tuple": "cpp",
			"type_traits": "cpp",
			"typeinfo": "cpp",
			"unordered_map": "cpp",
			"unordered_set": "cpp",
			"utility": "cpp",
			"variant": "cpp",
			"vector": "cpp",
			"xfacet": "cpp",
			"xhash": "cpp",
			"xiosbase": "cpp",
			"xlocale": "cpp",
			"xlocbuf": "cpp",
			"xlocinfo": "cpp",
			"xlocmes": "cpp",
			"xlocmon": "cpp",
			"xlocnum": "cpp",
			"xloctime": "cpp",
			"xmemory": "cpp",
			"xstring": "cpp",
			"xtr1common": "cpp",
			"xtree": "cpp",
			"xutility": "cpp",
			"*.tcc": "cpp",
			"memory_resource": "cpp",
			"string_view": "cpp",
			"cinttypes": "cpp",
			"ztest.h": "c"
		},
		"cmake.enabledOutputParsers": [
			"cmake",
			"gcc",
			"gnuld",
			"msvc",
			"ghs",  
			"diab",
			"iar"
		],
		"cmake.options.statusBarVisibility": "visible",
		"C_Cpp.default.cppStandard": "c++20",
		"C_Cpp.default.cStandard": "c17",
		"C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
		"C_Cpp.default.mergeConfigurations": true,
		"C_Cpp.exclusionPolicy": "checkFolders",
		"C_Cpp.inlayHints.autoDeclarationTypes.enabled": true,
		"C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft": true,
		"C_Cpp.inlayHints.parameterNames.enabled": true,
		"C_Cpp.inlayHints.referenceOperator.enabled": true,
		"C_Cpp.intelliSenseEngineFallback": "disabled",
		"C_Cpp.workspaceSymbols": "All",
		"C_Cpp.clang_format_sortIncludes": true,
		"C_Cpp.clang_format_style": "file:./clang-format",
		"C_Cpp.formatting": "clangFormat",
		"C_Cpp.vcFormat.indent.braces": true
	},
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "Build Pico",
				"type": "shell",
				"group": {
					"kind": "build"
				},
				"command": "west",
				"args": [
					"build",
					"-p",
					"auto",
					"-b",
					"rpi_pico"
				],
				"problemMatcher": [
					"$gcc"
				]
			},
			{
				"label": "Build STM32",
				"type": "shell",
				"group": {
					"kind": "build"
				},
				"command": "west",
				"args": [
					"build",
					"-p",
					"auto",
					"-b",
					"stm32f411ceu6-blackpill"
				],
				"problemMatcher": [
					"$gcc"
				]
			},
			{
				"label": "Build Test",
				"type": "shell",
				"group": {
					"kind": "build",
					"isDefault": true
				},
				"command": "west",
				"args": [
					"build",
					"-b",
					"native_sim",
					"--",
					"-DELS_TESTS=y",
					"-DCONFIG_COVERAGE=y",
					"-DCONFIG_COVERAGE_DUMP=y",
					// "-DCOVERAGE_GCOV=y"
				],
				"options": {
					"cwd": "${workspaceFolder}/"
				},
				"problemMatcher": [
					"$gcc"
				]
			},
			{
				"label": "Test",
				"type": "shell",
				"group": {
					"kind": "test",
				},
				"command": "build/tests",
				// "args": [
				// 	"-cpu",
				// 	"cortex-m3",
				// 	"-machine",
				// 	"lm3s6965evb",
				// 	"-nographic",
				// 	"-vga",
				// 	"none",
				// 	"-net",
				// 	"none",
				// 	"-pidfile",
				// 	"qemu.pid",
				// 	"-serial",
				// 	"mon:stdio",
				// 	"-semihosting",
				// 	"-kernel",
				// 	"build/zephyr/zephyr.elf"
				// ],
				"options": {
					"cwd": "${workspaceFolder}/"
				},
				"problemMatcher": [
					"$gcc"
				],
				"dependsOn": [
					"Build Test"
				]
			},
			{
				"label": "Clean",
				"type": "shell",
				"group": "build",
				"command": "west",
				"args": [
					"build",
					"-t",
					"pristine"
				],
				"problemMatcher": []
			},
			{
				"label": "West Configurable Build",
				"type": "shell",
				"group": {
					"kind": "build",
				},
				"command": "west",
				"args": [
					"build",
					"-p",
					"${input:pristine}",
					"-b",
					"${input:board}"
				],
				"problemMatcher": []
			},
			{
				"label": "West Flash",
				"type": "shell",
				"command": "west",
				"args": [
					"flash"
				],
				"problemMatcher": [
					"$gcc"
				]
			},
			{
				"label": "GUI Config",
				"type": "shell",
				"command": "west",
				"args": [
					"build",
					"-t",
					"guiconfig"
				]
			}
		],
		"inputs": [
			{
				"id": "board",
				"type": "pickString",
				"default": "rpi_pico",
				"description": "See https://docs.zephyrproject.org/latest/boards/index.html",
				"options": [
					"rpi_pico",
					"stm32f411ceu6-blackpill",
					"qemu_cortex_m3"
				]
			},
			{
				"id": "pristine",
				"type": "pickString",
				"description": "Choose when to run a pristine build",
				"default": "auto",
				"options": [
					"auto",
					"always",
					"never"
				]
			}
		]
	},
	"launch": {
		"version": "0.2.0",
		"configurations": [

			{
				"name": "Launch",
				"device": "rpi_pico",
				"cwd": "${workspaceFolder}",
				"executable": "build/zephyr/zephyr.elf",
				"request": "launch",
				"type": "cortex-debug",
				"runToEntryPoint": "main",
				"servertype": "openocd",
				"gdbPath": "${userHome}/zephyr-sdk-0.16.1/arm-zephyr-eabi/bin/arm-zephyr-eabi-gdb",
				"preLaunchTask": "West Build"
			},
			{
				"name": "Attach",
				"device": "rpi_pico",
				"cwd": "${workspaceFolder}",
				"executable": "build/zephyr/zephyr.elf",
				"request": "attach",
				"type": "cortex-debug",
				"runToEntryPoint": "main",
				"servertype": "openocd",
				"gdbPath": "${userHome}/zephyr-sdk-0.16.1/arm-zephyr-eabi/bin/arm-zephyr-eabi-gdb"
			},
			{
				"name": "Debug Test",
				"device": "qemu-cortex-m3",
				"cwd": "${workspaceFolder}/test",
				"executable": "${workspaceFolder}/build/zephyr/zephyr.elf",
				"request": "launch",
				"cpu" : "cortex-m3",
				"type": "cortex-debug",
				"runToEntryPoint": "main",
				"servertype": "qemu",
				"gdbPath": "${env:ZEPHYR_SDK}/arm-zephyr-eabi-gdb.exe",
				"preLaunchTask": "Build Test"
			},
			// {
			// 	"name": "Run Test",
			// 	"device": "qemu-cortex-m3",
			// 	"cwd": "${workspaceFolder}/test",
			// 	"executable": "${workspaceFolder}/build/zephyr/zephyr.elf",
			// 	"request": "launch",
			// 	"type": "",
			// 	"runToEntryPoint": "main",
			// 	"servertype": "qemu",
			// 	"gdbPath": "${env:ZEPHYR_SDK}/arm-zephyr-eabi-gdb.exe",
			// 	"preLaunchTask": "Build Test"
			// },
		]
	},
	"extensions": {
		"recommendations": [
			"ms-vscode.cpptools-extension-pack",
			"ms-python.python",
			"ms-vscode.vscode-embedded-tools",
			"ms-vscode.vscode-serial-monitor",
			"marus25.cortex-debug",
			"donjayamanne.python-environment-manager",
			"github.copilot",
			"github.copilot-chat",
			"ms-vscode.cmake-tools",
			"josetr.cmake-language-support-vscode",
			"ms-vscode.cpptools"
		]
	}
}